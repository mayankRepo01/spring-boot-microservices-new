apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keycloak
  name: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  strategy:
    type: Recreate
  template:
    metadata:

      labels:
        app: keycloak
    spec:
      containers:
        - args:
            - start-dev
            - --import-realm
          env:
            - name: DB_ADDR
              value: mysql
            - name: DB_DATABASE
              value: keycloak
            - name: DB_PASSWORD
              value: password
            - name: DB_USER
              value: keycloak
            - name: DB_VENDOR
              value: MYSQL
            - name: KEYCLOAK_ADMIN
              value: admin
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: admin
          image: quay.io/keycloak/keycloak:18.0.0
          name: keycloak
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /home/cloud_user/opt/keycloak/data/import/
              name: keycloak-claim0
      restartPolicy: Always
      volumes:
        - name: keycloak-claim0
          persistentVolumeClaim:
            claimName: keycloak-claim0
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: keycloak
  name: keycloak-service
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30085
  selector:
    app: keycloak
---
apiVersion: v1
kind: PersistentVolume # Create a PV
metadata:
  name: keyclock-data # Sets PV's name
  labels:
    type: local # Sets PV's type to local
spec:
  storageClassName: manual
  capacity:
    storage: 500Mi # Sets PV Volume
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/cloud_user/keyclock/" # Sets the volume's path
---
apiVersion: v1
kind: PersistentVolumeClaim # Create PVC
metadata:
  creationTimestamp: null
  labels:
    app: keycloak-claim0
  name: keycloak-claim0
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce # Sets read and write access
  resources:
    requests:
      storage: 100Mi # Sets volume size

