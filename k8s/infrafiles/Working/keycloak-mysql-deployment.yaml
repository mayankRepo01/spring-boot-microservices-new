apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keycloak-mysql
  name: keycloak-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak-mysql
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: keycloak
            - name: MYSQL_PASSWORD
              value: password
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_USER
              value: keycloak
          image: mysql:5.7
          name: keycloak-mysql
          ports:
          - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: keycloak-mysql-claim0
      restartPolicy: Always
      volumes:
        - name: keycloak-mysql-claim0
          persistentVolumeClaim:
            claimName: keycloak-mysql-claim0
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-mysql
spec:
  selector:
    app: keycloak-mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---

apiVersion: v1
kind: PersistentVolume # Create a PV
metadata:
  name: keyclock-mysql-data # Sets PV's name
  labels:
    type: keycloak-mysql # Sets PV's type to local
spec:
  storageClassName: manual
  capacity:
    storage: 500Mi # Sets PV Volume
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/cloud_user/keyclockMysql/" # Sets the volume's path
---
apiVersion: v1
kind: PersistentVolumeClaim # Create PVC
metadata:
  creationTimestamp: null
  labels:
    type: keycloak-mysql
  name: keycloak-mysql-claim0
spec:
  storageClassName: manual
  selector:
    matchLabels:
      type: keycloak-mysql #this will boind the pv with same label
  accessModes:
    - ReadWriteOnce # Sets read and write access
  resources:
    requests:
      storage: 100Mi # Sets volume size




